---
import { Icon } from 'astro-icon/components';
import type { SearchFormProps } from '../types/geoliens';

interface Props extends SearchFormProps {}

const { resultsCount } = Astro.props;
---

<div class="search-form-container mb-6 text-neutral-50" role="search" aria-label="Recherche de groupe par lieu">

  <div>
    <label for="search-location" class="block text-lg font-medium mb-2">Rechercher</label>
    <div class="relative w-full">
      <input
        type="text"
        id="search-location"
        placeholder="Ville, région, département..."
        class="w-full pl-4 py-2 border border-primary-yellow  focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:border-transparent text-sm font-medium"
        aria-label="Rechercher un groupe par lieu"
        aria-describedby="search-location-help"
        aria-controls="hierarchical-view"
      />
      <div class="absolute inset-y-0 right-0 ml-3 py-4 px-2 flex items-center pointer-events-none bg-primary-yellow  justify-center">
        <Icon name="magnifying-glass" class="w-4 h-4 text-neutral-dark" aria-hidden="true" />
      </div>
    </div>
    <p id="search-location-help" class="sr-only">Tapez une ville, un département ou une région pour filtrer les résultats.</p>
    <button id="clear-search" class="mt-2 text-xs btn-primary hidden">effacer</button>
  </div>

  <div class="mt-4 text-sm font-medium text-neutral-light" role="status" aria-live="polite" aria-atomic="true">
    <span id="results-count" class="font-bold">{resultsCount}</span>
    <span>groupe{resultsCount > 1 ? 's' : ''}</span>
  </div>
</div>

<!-- Sticky search bar on scroll -->
<div
  id="sticky-search-bar"
  class="fixed bottom-4 left-0 right-0 z-40 px-2 md:px-4 py-http://localhost:1420/2 mt-4 transition-transform transition-opacity duration-300 ease-out translate-y-6 opacity-0 pointer-events-none"
  role="search"
  aria-label="Recherche de groupe par lieu (barre fixe)"
  aria-hidden="true"
>
  <div class="container mx-auto max-w-xl bg-neutral-dark border-2 border-neutral-light">
    <label for="search-location-sticky" class="sr-only">Rechercher</label>
    <div class="relative">
      <input
        type="text"
        id="search-location-sticky"
        placeholder="Ville, région, département..."
        class="w-full pl-4 py-2 pr-10 text-neutral-50 focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:border-transparent text-sm font-medium"
        aria-label="Rechercher un groupe par lieu"
        aria-describedby="search-location-help"
        aria-controls="hierarchical-view"
      />
      <div class="absolute inset-y-0 right-0 ml-3 py-4 px-2 flex items-center pointer-events-none bg-primary-yellow  justify-center">
        <Icon name="magnifying-glass" class="w-4 h-4 text-neutral-dark" aria-hidden="true" />
      </div>
    </div>
  </div>
</div>

<script>
  const clearBtn = document.getElementById("clear-search");
  const searchInput = document.getElementById("search-location") as HTMLInputElement;
  const stickySearchInput = document.getElementById("search-location-sticky") as HTMLInputElement;
  
  function toggleClearButton() {
    if (clearBtn && searchInput) {
      if (searchInput.value.trim() !== "") {
        clearBtn.classList.remove("hidden");
      } else {
        clearBtn.classList.add("hidden");
      }
    }
  }
  
  if (clearBtn && searchInput) {
    // Show/hide clear button on input
    searchInput.addEventListener("input", toggleClearButton);
    
    // Clear button click handler
    clearBtn.addEventListener("click", () => {
      if (searchInput) searchInput.value = "";
      if (stickySearchInput) stickySearchInput.value = "";
      const event = new Event("input", { bubbles: true });
      if (searchInput) searchInput.dispatchEvent(event);
      if (stickySearchInput) stickySearchInput.dispatchEvent(event);
      searchInput?.focus();
      toggleClearButton();
    });
    
    // Initial check
    toggleClearButton();
  }
</script>
