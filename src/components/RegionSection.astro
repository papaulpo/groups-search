---
import type { ProcessedGeolien } from '../types/geoliens';
import { Icon } from 'astro-icon/components';

interface Props {
  regionName: string;
  geoliens: ProcessedGeolien[];
  isExpanded?: boolean;
}

const { regionName, geoliens, isExpanded = false } = Astro.props;

  // Récupère le nom du lieu à afficher sur la tuile (local, département, région)
  function getPlaceNameForTile(geolien: ProcessedGeolien, departmentName?: string, region?: string): string {
    const parts = geolien.fullPath?.split(' > ') || [];
    // Aucun chemin: retour région fournie ou vide
    if (parts.length === 0) return region || '';

    // Lien régional pur (chemin d'une seule section)
    if (parts.length === 1) return region || parts[0] || '';

    // Dans un département: privilégier le dernier segment (ville/local), sinon département
    if (departmentName) {
      if (parts.length >= 3) return parts[parts.length - 1];
      return departmentName || parts[1] || '';
    }

    // Par défaut: afficher le dernier segment disponible (utile pour 2+ segments)
    return parts[parts.length - 1] || region || '';
  }

  // Regrouper par département en utilisant le 2e segment (Région > Département > Ville)
  const norm = (s: string | undefined) => (s || '').normalize('NFD').replace(/\p{Diacritic}/gu, '').toLowerCase();

  type DeptBuckets = { departmental: ProcessedGeolien[]; local: ProcessedGeolien[] };
  const regionalGroups: ProcessedGeolien[] = [];
  const departmentGroups = geoliens.reduce((acc, geolien) => {
    const parts = geolien.fullPath?.split(' > ') || [];

    // Trouver l'index de la région courante dans le chemin
    const regionIdx = parts.findIndex((p) => p === regionName);
    // Si non trouvé, essayer cas insensibles (sécurité si accents/casse diffèrent)
    const regionIdxAlt = regionIdx === -1
      ? parts.findIndex((p) => p.toLowerCase() === regionName.toLowerCase())
      : regionIdx;

    // Si la région n'est pas dans le chemin, considérer comme régional simple
    if (regionIdxAlt === -1) {
      regionalGroups.push(geolien);
      return acc;
    }

    // Lien régional pur: s'arrête à la région
    if (parts.length === regionIdxAlt + 1) {
      regionalGroups.push(geolien);
      return acc;
    }

    // Sinon, on a au moins un département après la région
    const department = parts[regionIdxAlt + 1];
    if (!acc[department]) acc[department] = { departmental: [], local: [] } as DeptBuckets;

    const terr = norm(geolien.territoire);
    const isDepartmentalByPath = parts.length === regionIdxAlt + 2; // France > Région > Département
    const isDepartmentalByLabel = terr === 'departemental' || terr === 'départemental';
    if (isDepartmentalByPath || isDepartmentalByLabel) {
      acc[department].departmental.push(geolien);
    } else {
      acc[department].local.push(geolien);
    }
    return acc;
  }, {} as Record<string, DeptBuckets>);

  const departmentNames = Object.keys(departmentGroups).sort((a, b) => a.localeCompare(b, 'fr'));
  const totalGroups = geoliens.length;
---

<div class="region-section mb-6 bg-neutral-dark border border-neutral-medium rounded overflow-hidden focus-within:ring-2 focus-within:ring-red-600 ring-inset"
     data-region={regionName.toLowerCase()}
     data-count={totalGroups}>
  <!-- En-tête de la région -->
  <button
    class="region-header w-full p-4 flex items-center justify-between bg-primary-yellow text-neutral-dark font-semibold text-left hover:bg-primary-yellow-light transition-colors duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-red-600 ring-inset"
    type="button"
    aria-expanded={isExpanded ? 'true' : 'false'}
    aria-controls={`region-content-${regionName.replace(/\s+/g, '-').toLowerCase()}`}
    aria-describedby={`region-stats-${regionName.replace(/\s+/g, '-').toLowerCase()}`}
    data-region-toggle={regionName}
  >
    <div class="flex items-center gap-3">
      <Icon name="map-pin" class="w-5 h-5 flex-shrink-0" />
      <div class="flex flex-col md:items-start">
        <span class="text-lg font-bold">{regionName}</span>
        <span
          class="text-sm font-medium opacity-80"
          id={`region-stats-${regionName.replace(/\s+/g, '-').toLowerCase()}`}
          aria-label={`${totalGroups} groupe${totalGroups > 1 ? 's' : ''} dans ${departmentNames.length} département${departmentNames.length > 1 ? 's' : ''}`}
        >
          {totalGroups} groupe{totalGroups > 1 ? 's' : ''} • {departmentNames.length} département{departmentNames.length > 1 ? 's' : ''}
        </span>
      </div>
    </div>
    <Icon
      name="caret-down"
      class={`region-caret w-5 h-5 transition-transform duration-200 ${isExpanded ? 'rotate-180' : ''}`}
    />
  </button>

  <!-- Contenu de la région -->
  <div
    id={`region-content-${regionName.replace(/\s+/g, '-').toLowerCase()}`}
    class={`region-content transition-all duration-300 overflow-hidden flex flex-col ${isExpanded ? 'max-h-none' : 'max-h-0'}`}
    aria-hidden={isExpanded ? 'false' : 'true'}
  >
    <!-- En-tête interne: liens régionaux + action -->
    <div class="p-4 flex flex-wrap flex-col-reverse md:flex-row items-start justify-between gap-4">
      <!-- Liens régionaux -->
      <div class="flex-1 min-w-0 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4" aria-label="Liens régionaux">
        {regionalGroups.map((geolien) => (
          <a href={geolien.url} target="_blank" rel="noopener noreferrer" class="regional-link block w-full">
            <div
              class="group-tile rounded p-2 flex flex-col gap-1 bg-neutral-cream regional-group-tile"
              data-name={geolien.nom.toLowerCase()}
              data-type={geolien.type}
              data-territoire={geolien.territoire}
              data-region={regionName.toLowerCase()}
              data-local={getPlaceNameForTile(geolien, undefined, regionName).toLowerCase()}
            >
              <div class="w-full place-label">
                <div class="text-xs font-semibold text-neutral-medium leading-none">
                  {getPlaceNameForTile(geolien, undefined, regionName)}
                </div>
              </div>
              <div class="flex items-center gap-2">
                <div class="w-4 h-4 flex-shrink-0">
                  <img
                    src={`/global/img/${geolien.type.toLowerCase().replace(/\s+/g, '').replace('-', '').replace('(', '').replace(')', '')}.svg`}
                    alt={geolien.type}
                    class="w-full h-full object-contain"
                    onerror="this.src='/global/img/site.svg'"
                  />
                </div>
                <h5 class="text-xs font-semibold text-neutral-dark truncate" title={geolien.nom}>
                  {geolien.nom}
                </h5>
              </div>
              <div class="flex-1">
                <div class="flex items-center gap-1 text-xs text-neutral-medium">
                  <span class="truncate">{geolien.type}</span>
                  {geolien.territoire && (
                    <>
                      <span>•</span>
                      <span class="truncate">{geolien.territoire}</span>
                    </>
                  )}
                </div>
              </div>
            </div>
          </a>
        ))}

        
      </div>

      <button
        type="button"
        class="toggle-departments-btn px-3 py-2 uppercase text-xs font-medium bg-primary-yellow hover:bg-primary-yellow-light transition-colors duration-200 cursor-pointer text-neutral-dark rounded focus:outline-none focus:ring-2 focus:ring-neutral-50"
        aria-label="Développer tous les départements de la région"
        aria-pressed="false"
      >
        Tout développer
      </button>
    </div>
    <div class="p-4 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
      {departmentNames.map((departmentName) => (
        <div class="department-group">

          <!-- En-tête du département (accordéon) -->
          <button
            class="department-header w-full flex items-center gap-2 mb-3 text-left focus:outline-none focus:ring-2 focus:ring-primary-yellow focus:ring-offset-2"
            type="button"
            aria-expanded="false"
            aria-controls={`department-content-${regionName.replace(/\s+/g, '-').toLowerCase()}-${departmentName.replace(/\s+/g, '-').toLowerCase()}`}
            tabindex="-1"
          >
            <Icon name="building-office" class="w-4 h-4 text-neutral-medium flex-shrink-0" />
            <h4 class="text-base font-semibold text-neutral-light flex-1">{departmentName}</h4>
            <span class="text-sm text-neutral-medium">({departmentGroups[departmentName].departmental.length + departmentGroups[departmentName].local.length})</span>
          </button>

          <!-- Contenu du département -->
          <div
            id={`department-content-${regionName.replace(/\s+/g, '-').toLowerCase()}-${departmentName.replace(/\s+/g, '-').toLowerCase()}`}
            class="department-content flex flex-col gap-2 hidden"
            aria-hidden="true"
          >
            {[
              ...departmentGroups[departmentName].departmental,
              ...departmentGroups[departmentName].local,
            ].map((geolien) => (
              <a href={geolien.url} target="_blank" rel="noopener noreferrer" tabindex="-1">
                <div
                  class="group-tile rounded p-2 flex flex-col gap-1 bg-neutral-cream"
                  data-name={geolien.nom.toLowerCase()}
                  data-type={geolien.type}
                  data-territoire={geolien.territoire}
                  data-territoire-lower={geolien.territoire.toLowerCase()}
                  data-department={departmentName.toLowerCase()}
                  data-region={regionName.toLowerCase()}
                  data-local={getPlaceNameForTile(geolien, departmentName, regionName).toLowerCase()}
                >
                  <div class="w-full place-label">
                    <div class="text-sm font-semibold text-neutral-medium leading-none">
                      {getPlaceNameForTile(geolien, departmentName, regionName)}
                    </div>
                  </div>
                  <!-- Icône du réseau -->
                  <div class="flex items-center gap-2">
                    <div class="w-4 h-4 flex-shrink-0">
                      <img
                        src={`/global/img/${geolien.type.toLowerCase().replace(/\s+/g, '').replace('-', '').replace('(', '').replace(')', '')}.svg`}
                        alt={geolien.type}
                        class="w-full h-full object-contain"
                        onerror="this.src='/global/img/site.svg'"
                      />
                    </div>

                    <h5 class="text-xs font-semibold text-neutral-dark truncate" title={geolien.nom}>
                      {geolien.nom}
                    </h5>
                  </div>

                  <!-- Informations du groupe -->
                  <div class="flex-1 min-w-0">
                    <div class="flex items-center gap-1 text-xs text-neutral-medium">
                      <span class="truncate">{geolien.type}</span>
                      {geolien.territoire && (
                        <>
                          <span>•</span>
                          <span class="truncate">{geolien.territoire}</span>
                        </>
                      )}
                    </div>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .region-content.max-h-0 {
    max-height: 0;
  }

  .region-content:not(.max-h-0) {
    max-height: none; /* Permettre une expansion complète */
  }

  @media (max-width: 640px) {
    .group-tile {
      padding: 0.75rem;
    }
  }
</style>
